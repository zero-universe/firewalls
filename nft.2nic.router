#!/usr/bin/nft -f

#
# last modified 2014.09.21
# zero.universe@gmail.com
#

table filter {
	
	chain input	{ 
		type filter hook input priority 0; 

		# invalid connections
		ct state invalid drop

		# loopback interface
		meta iif lo accept
		
		# established/related connections
		ct state {established, related} accept

		meta iif {enp3s0, wlp4s0} ip protocol tcp jump my_tcpv4
		meta iif {enp3s0, wlp4s0} ip protocol udp jump my_udpv4
		meta iif {enp3s0, wlp4s0} ip protocol icmp accept

		}
		

	chain my_tcpv4 {
		
		# bad tcp -> avoid network scanning:
        tcp flags & (fin|syn) == (fin|syn) drop
        tcp flags & (syn|rst) == (syn|rst) drop
        tcp flags & (fin|syn|rst|psh|ack|urg) < (fin) drop # == 0 would be better, not supported yet.
        tcp flags & (fin|syn|rst|psh|ack|urg) == (fin|psh|urg) drop
		
		ct state {established, related} accept

        # invalid connections
		ct state invalid drop

		# loopback interface
		#meta iif lo accept

		# open tcp ports: dns, dhcp, ssh
		meta iif eth0 tcp dport { 22 } accept
		meta iif wlp4s0 tcp dport { 22, 53, 67, 68 } accept
		
		# everything else
		drop
    
        }
	
	
	chain my_udpv4 {

		# bad tcp -> avoid network scanning:
        tcp flags & (fin|syn) == (fin|syn) drop
        tcp flags & (syn|rst) == (syn|rst) drop
        tcp flags & (fin|syn|rst|psh|ack|urg) < (fin) drop # == 0 would be better, not supported yet.
        tcp flags & (fin|syn|rst|psh|ack|urg) == (fin|psh|urg) drop

		ct state {established, related} accept
        
        # invalid connections
		#ct state invalid drop

		# loopback interface
		#meta iif lo accept

		# dns, dhcp
		meta iif wlp4s0 tcp dport { 53, 67, 68 } accept

		# everything else
		drop
    
        }
         
	
	chain output { 
		type filter hook output priority 0; 
		
		#ct state {new, established, related} counter accept
		
		#meta iif ens3 tcp dport { 22, 53 } counter accept
		#meta iif ens3 udp dport { 53 } counter accept
		accept
		
		}
		
		
	chain forward { 
		type filter hook forward priority 0; 
		
		ct state {established, related} accept
		
		meta iif wlan0 accept
		
		# everything else
		drop
		
		}
		
}


table nat {

	chain prerouting {
		type nat hook prerouting priority 0 \;
		
	}
	

	chain postrouting {
		type nat hook postrouting priority 0 \;
		
		# snat
		ip saddr 192.168.199.0/24 oif eth0 snat 192.168.1.1
		
	}

	

}